#!/usr/bin/env node
/**
 * Created by hvail on 2018/8/4.
 */
let RouterApi = {};
let util = require('./utils');

RouterApi.BuildApi = function (router, keymap, cross, keys) {

    let k0 = keys[0];
    let k1 = keys[1];

    const _doPost = (req, res, next) => {
        let obj = req.body;
        util.PromisePost(keymap, obj)
            .then(key => util.PromisePost(cross, obj).then(cos => (key * 10 + cos)))
            .then(state => res.send('' + state))
            .catch(err => {
                console.log("_doPost");
                console.log(cross);
                console.log(keymap);
                console.log(obj);
                console.log(err);
                res.send("-1");
            })
    };

    const _doPut = (req, res, next) => {
        let obj = req.body;
        let url = `${cross}?${k0}=${obj[k0]}&${k1}=${obj[k1]}`;
        util.PromiseGet(url)
            .then(msg => (JSON.parse(msg)))
            .then(arr => (arr.length > 0 ? arr[0] : null))
            .then(alarm => {
                if (!alarm)throw "no object to change";
                obj[k0] = alarm[k0];
                obj[k1] = alarm[k1];
                return obj;
            })
            .then(() => util.PromisePut(keymap, obj))
            .then(() => util.PromisePut(cross, obj))
            .then(state => res.send('' + state))
            .catch(err => {
                console.log("_doPut");
                console.log(cross);
                console.log(keymap);
                console.log(obj);
                console.log(err);
                res.send("-1");
            })
    };

    const _doGet = (req, res, next) => {
        let query = req.url.split('?');
        let result;
        if (query.length === 1) {
            result = util.PromiseGet(cross);
        } else {
            console.log(`${keymap}?${query[1]}`);
            result = util.PromiseGet(`${keymap}?${query[1]}`);
        }
        result.then(msg => res.send(msg))
            .catch(err => {
                console.log(err);
                res.send('');
            });
    };

    const _doGetByField = (req, res, next) => {
        let {field, value} = req.params;
        util.PromiseGet(`${cross}/field/${field}/${value}`)
            .then(msg => res.send('' + msg))
            .catch(err => {
                console.log(`${cross}/field/${field}/${value}`);
                console.log(err);
                res.send("");
            });
    };

    const _doGetByFields = (req, res, next) => {
        let {field, value} = req.params;
        util.PromiseGet(`${cross}/fields/${field}/${value}`)
            .then(msg => res.send('' + msg))
            .catch(err => {
                console.log(`${cross}/fields/${field}/${value}`);
                console.log(err);
                res.send("");
            });
    };

    const _doDelete = (req, res, next) => {
        let obj = req.body;
        util.PromiseDelete(`${keymap}`, obj)
            .then(util.PromiseDelete(`${cross}`, obj))
            .then(state => res.send('' + state))
            .catch(err => {
                console.log(`${keymap}`);
                console.log(`${cross}`);
                console.log(obj);
                console.log(err);
                res.send("-1");
            });
    };

    const _doSingleDelete = (req, res, next) => {
        let {val1, val2} = req.params;

    };

    // 添加
    router.post('/', _doPost);
    // 修改
    router.put('/', _doPut);
    // 查询
    router.get('/', _doGet);
    router.get('/field/:field/:value', _doGetByField);
    router.get('/fields/:field/:value', _doGetByFields);

    // 删除(利用查询符进行删除)
    router.delete('/', _doDelete);
    // 删除(利用固定关键字段值进行删除)
    router.delete('/single/:val1/:val2', _doSingleDelete);

    return router;
};

module.exports = RouterApi;